Search.setIndex({"docnames": ["index", "modules", "src", "src.matchbox", "src.plugins", "src.plugins.natgrad"], "filenames": ["index.rst", "modules.rst", "src.rst", "src.matchbox.rst", "src.plugins.rst", "src.plugins.natgrad.rst"], "titles": ["Welcome to Sound-CL\u2019s documentation!", "src", "src package", "src.matchbox package", "src.plugins package", "src.plugins.natgrad package"], "terms": {"src": 0, "packag": [0, 1], "index": 0, "modul": [0, 1], "search": 0, "page": 0, "subpackag": 1, "matchbox": [1, 2], "submodul": 1, "convasrdecod": [1, 2], "convasrencod": [1, 2], "convblock": [1, 2], "maskedconv1d": [1, 2], "content": 1, "plugin": [1, 2], "ekfac_plugin": [1, 2], "dataset": 1, "addwhitenois": [1, 2], "forward": [1, 2, 3], "audio_dataset": [1, 2], "mlcommon": [1, 2], "speechcommand": [1, 2], "cachedaudio": [1, 2], "mlcommonsdata": [1, 2], "get_metadata": [1, 2], "mfcctransform": [1, 2], "scatter": [1, 2], "specaug": [1, 2], "speechcommandsdata": [1, 2], "add_white_nois": [1, 2], "mfcc_transform": [1, 2], "preprocess_and_save_dataset": [1, 2], "spec_aug": [1, 2], "speech_commands_col": [1, 2], "infer": 1, "predict": [1, 2], "record": [1, 2], "main": 1, "run": [1, 2, 3], "model": [1, 3], "audiova": [1, 2], "decod": [1, 2], "encod": [1, 2, 3], "gener": [1, 2, 3], "reparameter": [1, 2], "encdecbasemodel": [1, 2], "m5": [1, 2], "pool": [1, 2], "scattering_classifi": [1, 2], "convasrdecoderclassif": [2, 3], "groupshuffl": [2, 3], "compute_new_kernel_s": [2, 3], "get_same_pad": [2, 3], "init_weight": [2, 3], "tds_normal_": [2, 3], "tds_uniform_": [2, 3], "get_seq_len": [2, 3], "update_masked_length": [2, 3], "natgrad": [2, 4], "ekfac": [2, 4], "kfac": [2, 4], "before_upd": [2, 4], "kfac_plugin": [2, 4], "class": [2, 3, 4, 5], "sourc": [2, 3, 4, 5], "base": [2, 3, 4, 5], "x": [2, 3], "defin": [2, 3], "comput": [2, 3], "perform": [2, 3, 5], "everi": [2, 3], "call": [2, 3, 4], "should": [2, 3], "overridden": [2, 3], "all": [2, 3], "subclass": [2, 3], "although": [2, 3], "recip": [2, 3], "pass": [2, 3], "need": [2, 3], "within": [2, 3], "thi": [2, 3], "function": [2, 3], "one": [2, 3, 5], "instanc": [2, 3], "afterward": [2, 3], "instead": [2, 3], "sinc": [2, 3], "former": [2, 3], "take": [2, 3], "care": [2, 3], "regist": [2, 3], "hook": [2, 3], "while": [2, 3], "latter": [2, 3], "silent": [2, 3], "ignor": [2, 3], "them": [2, 3], "train_transform": 2, "none": [2, 3, 5], "test_transform": 2, "object": 2, "root": 2, "sub_fold": 2, "subset1": 2, "subset": 2, "train": 2, "transform": 2, "posixpath": 2, "home": 2, "joe": 2, "avalanch": 2, "data": 2, "url": 2, "speech_commands_v0": 2, "02": 2, "download": 2, "true": [2, 3, 5], "pre_process": 2, "locat": 2, "version": 2, "name": 2, "automat": 2, "present": 2, "valid": [2, 3], "test": 2, "train_cache_path": 2, "dataset_cach": 2, "test_cache_path": 2, "folder_in_arch": 2, "n": [2, 3], "int": [2, 3], "tupl": [2, 3], "str": [2, 3], "sample_r": 2, "audio_tensor": 2, "min_snr_db": 2, "20": 2, "max_snr_db": 2, "90": 2, "std_n": 2, "0": [2, 3, 4, 5], "5": 2, "norm": 2, "2": [2, 3], "n_fft": 2, "512": 2, "n_mfcc": 2, "64": [2, 3], "hop_length": 2, "10": 2, "mel_scal": 2, "htk": 2, "save_path": 2, "tensor": [2, 3], "time_mask": 2, "50": 2, "freq_mask": 2, "prob": 2, "8": 2, "batch": [2, 3], "collat": 2, "set": [2, 3], "up": 2, "dataload": 2, "paramet": [2, 3], "size": [2, 3], "return": [2, 3], "form": 2, "target": 2, "task_label": 2, "type": [2, 3], "audio": [2, 3], "devic": 2, "i": [2, 3], "e": 2, "argmax": 2, "softmax": 2, "logit": 2, "nn": [2, 3], "pytorch": 2, "neural": 2, "network": [2, 4], "torch": [2, 3], "prefer": 2, "cpu": 2, "label": 2, "second": 2, "1": [2, 3, 4, 5], "16000": 2, "user": 2, "us": [2, 3], "machin": 2, "default": [2, 3], "microphon": 2, "option": 2, "yield": 2, "A": 2, "dimension": [2, 3], "repres": [2, 3], "opt_typ": 2, "learning_r": 2, "train_batch_s": 2, "eval_batch_s": 2, "train_epoch": 2, "momentum": 2, "w_decai": 2, "beta": 2, "save_model": 2, "_seed": 2, "_run": 2, "ran": 2, "sacr": 2, "automain": 2, "decor": 2, "optim": [2, 4, 5], "float": [2, 3], "learn": 2, "rate": 2, "mini": 2, "eval": 2, "number": [2, 3], "epoch": 2, "each": 2, "experi": 2, "valu": [2, 3], "polynomialholddecayannealing_schedul": 2, "bool": [2, 3], "enabl": 2, "schedul": 2, "save": 2, "artifact": 2, "random": 2, "seed": 2, "common": 2, "librari": 2, "capabl": 2, "runtim": 2, "environ": 2, "top1": 2, "averag": 2, "accuraci": 2, "stream": 2, "imgchannel": 2, "featuredim": 2, "15656": 2, "zdim": 2, "256": 2, "z": 2, "batch_siz": 2, "condit": 2, "let": 2, "sampl": 2, "output": [2, 3], "either": [2, 3], "singl": 2, "provid": 2, "possibl": 2, "condot": 2, "g": [2, 5], "mu": 2, "logvar": 2, "num_mel": 2, "final_filt": 2, "num_class": [2, 3], "input_length": 2, "input_sign": 2, "n_input": 2, "n_output": 2, "35": 2, "stride": [2, 3, 5], "16": 2, "n_channel": 2, "32": 2, "channel_s": 2, "feat_in": 3, "init_mod": 3, "xavier_uniform": 3, "return_logit": 3, "pooling_typ": 3, "avg": 3, "encoder_output": 3, "activ": 3, "relu": 3, "normalization_mod": 3, "residual_mod": 3, "add": 3, "norm_group": 3, "conv_mask": 3, "frame_spl": 3, "audio_sign": 3, "length": 3, "inplan": 3, "plane": 3, "repeat": 3, "3": 3, "kernel_s": 3, "11": 3, "kernel_size_factor": 3, "dilat": 3, "pad": [3, 5], "same": 3, "dropout": 3, "residu": 3, "group": 3, "separ": 3, "fals": [3, 5], "head": 3, "normal": 3, "residual_pan": 3, "stride_last": 3, "input": 3, "channel": 3, "repe_at": 3, "sub": 3, "block": 3, "r": 3, "kernels": 3, "convolut": 3, "kernel": 3, "across": 3, "point": 3, "scale": 3, "multipli": 3, "round": 3, "down": 3, "nearest": 3, "odd": 3, "integ": 3, "compos": 3, "layer": 3, "which": 3, "factor": 3, "note": 3, "when": 3, "must": 3, "equal": 3, "string": 3, "current": 3, "onli": 3, "support": 3, "symmetr": 3, "zero": 3, "determin": 3, "percentag": 3, "out": 3, "ar": 3, "hardtanh": 3, "selu": 3, "swish": 3, "whether": 3, "branch": 3, "ad": 3, "construct": 3, "pointwis": 3, "mai": 3, "depend": 3, "flag": 3, "describ": 3, "time": 3, "depthwis": 3, "ordinari": 3, "mask": 3, "disabl": 3, "can": 3, "batchnorm1d": 3, "groupnorm1d": 3, "instancenorm": 3, "layernorm": 3, "special": 3, "case": 3, "groupnorm": 3, "argument": 3, "simpli": 3, "first": 3, "stride_add": 3, "requir": 3, "parallel": 3, "well": 3, "util": 3, "pane": 3, "jasper": 3, "dr": 3, "pleas": 3, "refer": 3, "paper": 3, "In": 3, "onc": 3, "": 3, "just": 3, "last": 3, "input_": 3, "list": 3, "param": 3, "The": 3, "two": 3, "preprocess": 3, "signal": 3, "shape": 3, "b": 3, "d": 3, "t": 3, "vector": 3, "after": 3, "process": 3, "through": 3, "kernel_width": 3, "m": 3, "mode": 3, "fan_in": 3, "initi": 3, "from": 3, "sequenc": 3, "speech": 3, "recognit": 3, "depth": 3, "http": 3, "www": 3, "isca": 3, "org": 3, "archiv": 3, "interspeech_2019": 3, "pdf": 3, "2460": 3, "math": 3, "ext": 3, "bound": 3, "im": 3, "sqrt": 3, "rac": 3, "fan_mod": 3, "arg": 3, "an": 3, "fan_out": 3, "choos": 3, "preserv": 3, "magnitud": 3, "varianc": 3, "weight": 3, "backward": 3, "uniform": 3, "in_channel": 3, "out_channel": 3, "bia": 3, "use_mask": 3, "len": 3, "step": [4, 5], "grad_wrt_kernel": [4, 5], "ep": [4, 5], "basesgdplugin": 4, "befor": 4, "updat": 4, "basetempl": 4, "net": 5, "sua": 5, "ra": 5, "update_freq": 5, "alpha": 5, "75": 5, "update_stat": 5, "update_param": 5, "precondit": 5, "target_s": 5, "pi": 5, "constraint_norm": 5}, "objects": {"": [[2, 0, 0, "-", "src"]], "src": [[2, 0, 0, "-", "dataset"], [2, 0, 0, "-", "infer"], [2, 0, 0, "-", "main"], [3, 0, 0, "-", "matchbox"], [2, 0, 0, "-", "models"], [4, 0, 0, "-", "plugins"]], "src.dataset": [[2, 1, 1, "", "AddWhiteNoise"], [2, 1, 1, "", "Audio_Dataset"], [2, 1, 1, "", "CachedAudio"], [2, 1, 1, "", "MLcommonsData"], [2, 1, 1, "", "MfccTransform"], [2, 1, 1, "", "Scattering"], [2, 1, 1, "", "SpecAugment"], [2, 1, 1, "", "SpeechCommandsData"], [2, 3, 1, "", "add_white_noise"], [2, 3, 1, "", "mfcc_transform"], [2, 3, 1, "", "preprocess_and_save_dataset"], [2, 3, 1, "", "spec_aug"], [2, 3, 1, "", "speech_commands_collate"]], "src.dataset.AddWhiteNoise": [[2, 2, 1, "", "forward"]], "src.dataset.Audio_Dataset": [[2, 2, 1, "", "MLCommons"], [2, 2, 1, "", "SpeechCommands"]], "src.dataset.MLcommonsData": [[2, 2, 1, "", "get_metadata"]], "src.dataset.MfccTransform": [[2, 2, 1, "", "forward"]], "src.dataset.Scattering": [[2, 2, 1, "", "forward"]], "src.dataset.SpecAugment": [[2, 2, 1, "", "forward"]], "src.infer": [[2, 3, 1, "", "predict"], [2, 3, 1, "", "record"]], "src.main": [[2, 3, 1, "", "run"]], "src.matchbox": [[3, 0, 0, "-", "ConvASRDecoder"], [3, 0, 0, "-", "ConvASREncoder"], [3, 0, 0, "-", "ConvBlock"], [3, 0, 0, "-", "MaskedConv1d"]], "src.matchbox.ConvASRDecoder": [[3, 1, 1, "", "ConvASRDecoderClassification"]], "src.matchbox.ConvASRDecoder.ConvASRDecoderClassification": [[3, 2, 1, "", "forward"]], "src.matchbox.ConvASREncoder": [[3, 1, 1, "", "ConvASREncoder"]], "src.matchbox.ConvASREncoder.ConvASREncoder": [[3, 2, 1, "", "forward"]], "src.matchbox.ConvBlock": [[3, 1, 1, "", "ConvBlock"], [3, 1, 1, "", "GroupShuffle"], [3, 3, 1, "", "compute_new_kernel_size"], [3, 3, 1, "", "get_same_padding"], [3, 3, 1, "", "init_weights"], [3, 3, 1, "", "tds_normal_"], [3, 3, 1, "", "tds_uniform_"]], "src.matchbox.ConvBlock.ConvBlock": [[3, 2, 1, "", "forward"]], "src.matchbox.ConvBlock.GroupShuffle": [[3, 2, 1, "", "forward"]], "src.matchbox.MaskedConv1d": [[3, 1, 1, "", "MaskedConv1d"]], "src.matchbox.MaskedConv1d.MaskedConv1d": [[3, 2, 1, "", "forward"], [3, 2, 1, "", "get_seq_len"], [3, 2, 1, "", "update_masked_length"]], "src.models": [[2, 1, 1, "", "AudioVAE"], [2, 1, 1, "", "EncDecBaseModel"], [2, 1, 1, "", "M5"], [2, 1, 1, "", "Pool"], [2, 1, 1, "", "Scattering_Classifier"]], "src.models.AudioVAE": [[2, 2, 1, "", "decoder"], [2, 2, 1, "", "encoder"], [2, 2, 1, "", "forward"], [2, 2, 1, "", "generate"], [2, 2, 1, "", "reparameterize"]], "src.models.EncDecBaseModel": [[2, 2, 1, "", "forward"]], "src.models.M5": [[2, 2, 1, "", "forward"]], "src.models.Pool": [[2, 2, 1, "", "forward"]], "src.models.Scattering_Classifier": [[2, 2, 1, "", "forward"]], "src.plugins": [[4, 0, 0, "-", "ekfac_plugin"], [5, 0, 0, "-", "natgrad"]], "src.plugins.ekfac_plugin": [[4, 1, 1, "", "EKFAC_Plugin"], [4, 1, 1, "", "KFAC_Plugin"]], "src.plugins.ekfac_plugin.EKFAC_Plugin": [[4, 2, 1, "", "before_update"]], "src.plugins.ekfac_plugin.KFAC_Plugin": [[4, 2, 1, "", "before_update"]], "src.plugins.natgrad": [[5, 0, 0, "-", "ekfac"], [5, 0, 0, "-", "kfac"]], "src.plugins.natgrad.ekfac": [[5, 1, 1, "", "EKFAC"], [5, 3, 1, "", "grad_wrt_kernel"]], "src.plugins.natgrad.ekfac.EKFAC": [[5, 2, 1, "", "step"]], "src.plugins.natgrad.kfac": [[5, 1, 1, "", "KFAC"]], "src.plugins.natgrad.kfac.KFAC": [[5, 2, 1, "", "step"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "sound": 0, "cl": 0, "": 0, "document": 0, "content": [0, 2, 3, 4, 5], "indic": 0, "tabl": 0, "src": [1, 2, 3, 4, 5], "packag": [2, 3, 4, 5], "subpackag": [2, 4], "submodul": [2, 3, 4, 5], "dataset": 2, "modul": [2, 3, 4, 5], "infer": 2, "main": 2, "model": 2, "matchbox": 3, "convasrdecod": 3, "convasrencod": 3, "convblock": 3, "maskedconv1d": 3, "plugin": [4, 5], "ekfac_plugin": 4, "natgrad": 5, "ekfac": 5, "kfac": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to Sound-CL\u2019s documentation!": [[0, "welcome-to-sound-cl-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "src": [[1, "src"]], "src package": [[2, "src-package"]], "Subpackages": [[2, "subpackages"], [4, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"]], "src.dataset module": [[2, "module-src.dataset"]], "src.infer module": [[2, "module-src.infer"]], "src.main module": [[2, "module-src.main"]], "src.models module": [[2, "module-src.models"]], "Module contents": [[2, "module-src"], [3, "module-src.matchbox"], [4, "module-src.plugins"], [5, "module-src.plugins.natgrad"]], "src.matchbox package": [[3, "src-matchbox-package"]], "src.matchbox.ConvASRDecoder module": [[3, "module-src.matchbox.ConvASRDecoder"]], "src.matchbox.ConvASREncoder module": [[3, "module-src.matchbox.ConvASREncoder"]], "src.matchbox.ConvBlock module": [[3, "module-src.matchbox.ConvBlock"]], "src.matchbox.MaskedConv1d module": [[3, "module-src.matchbox.MaskedConv1d"]], "src.plugins package": [[4, "src-plugins-package"]], "src.plugins.ekfac_plugin module": [[4, "module-src.plugins.ekfac_plugin"]], "src.plugins.natgrad package": [[5, "src-plugins-natgrad-package"]], "src.plugins.natgrad.ekfac module": [[5, "module-src.plugins.natgrad.ekfac"]], "src.plugins.natgrad.kfac module": [[5, "module-src.plugins.natgrad.kfac"]]}, "indexentries": {"addwhitenoise (class in src.dataset)": [[2, "src.dataset.AddWhiteNoise"]], "audiovae (class in src.models)": [[2, "src.models.AudioVAE"]], "audio_dataset (class in src.dataset)": [[2, "src.dataset.Audio_Dataset"]], "cachedaudio (class in src.dataset)": [[2, "src.dataset.CachedAudio"]], "encdecbasemodel (class in src.models)": [[2, "src.models.EncDecBaseModel"]], "m5 (class in src.models)": [[2, "src.models.M5"]], "mlcommons() (src.dataset.audio_dataset method)": [[2, "src.dataset.Audio_Dataset.MLCommons"]], "mlcommonsdata (class in src.dataset)": [[2, "src.dataset.MLcommonsData"]], "mfcctransform (class in src.dataset)": [[2, "src.dataset.MfccTransform"]], "pool (class in src.models)": [[2, "src.models.Pool"]], "scattering (class in src.dataset)": [[2, "src.dataset.Scattering"]], "scattering_classifier (class in src.models)": [[2, "src.models.Scattering_Classifier"]], "specaugment (class in src.dataset)": [[2, "src.dataset.SpecAugment"]], "speechcommands() (src.dataset.audio_dataset method)": [[2, "src.dataset.Audio_Dataset.SpeechCommands"]], "speechcommandsdata (class in src.dataset)": [[2, "src.dataset.SpeechCommandsData"]], "add_white_noise() (in module src.dataset)": [[2, "src.dataset.add_white_noise"]], "decoder() (src.models.audiovae method)": [[2, "src.models.AudioVAE.decoder"]], "encoder() (src.models.audiovae method)": [[2, "src.models.AudioVAE.encoder"]], "forward() (src.dataset.addwhitenoise method)": [[2, "src.dataset.AddWhiteNoise.forward"]], "forward() (src.dataset.mfcctransform method)": [[2, "src.dataset.MfccTransform.forward"]], "forward() (src.dataset.scattering method)": [[2, "src.dataset.Scattering.forward"]], "forward() (src.dataset.specaugment method)": [[2, "src.dataset.SpecAugment.forward"]], "forward() (src.models.audiovae method)": [[2, "src.models.AudioVAE.forward"]], "forward() (src.models.encdecbasemodel method)": [[2, "src.models.EncDecBaseModel.forward"]], "forward() (src.models.m5 method)": [[2, "src.models.M5.forward"]], "forward() (src.models.pool method)": [[2, "src.models.Pool.forward"]], "forward() (src.models.scattering_classifier method)": [[2, "src.models.Scattering_Classifier.forward"]], "generate() (src.models.audiovae method)": [[2, "src.models.AudioVAE.generate"]], "get_metadata() (src.dataset.mlcommonsdata method)": [[2, "src.dataset.MLcommonsData.get_metadata"]], "mfcc_transform() (in module src.dataset)": [[2, "src.dataset.mfcc_transform"]], "module": [[2, "module-src"], [2, "module-src.dataset"], [2, "module-src.infer"], [2, "module-src.main"], [2, "module-src.models"], [3, "module-src.matchbox"], [3, "module-src.matchbox.ConvASRDecoder"], [3, "module-src.matchbox.ConvASREncoder"], [3, "module-src.matchbox.ConvBlock"], [3, "module-src.matchbox.MaskedConv1d"], [4, "module-src.plugins"], [4, "module-src.plugins.ekfac_plugin"], [5, "module-src.plugins.natgrad"], [5, "module-src.plugins.natgrad.ekfac"], [5, "module-src.plugins.natgrad.kfac"]], "predict() (in module src.infer)": [[2, "src.infer.predict"]], "preprocess_and_save_dataset() (in module src.dataset)": [[2, "src.dataset.preprocess_and_save_dataset"]], "record() (in module src.infer)": [[2, "src.infer.record"]], "reparameterize() (src.models.audiovae method)": [[2, "src.models.AudioVAE.reparameterize"]], "run() (in module src.main)": [[2, "src.main.run"]], "spec_aug() (in module src.dataset)": [[2, "src.dataset.spec_aug"]], "speech_commands_collate() (in module src.dataset)": [[2, "src.dataset.speech_commands_collate"]], "src": [[2, "module-src"]], "src.dataset": [[2, "module-src.dataset"]], "src.infer": [[2, "module-src.infer"]], "src.main": [[2, "module-src.main"]], "src.models": [[2, "module-src.models"]], "convasrdecoderclassification (class in src.matchbox.convasrdecoder)": [[3, "src.matchbox.ConvASRDecoder.ConvASRDecoderClassification"]], "convasrencoder (class in src.matchbox.convasrencoder)": [[3, "src.matchbox.ConvASREncoder.ConvASREncoder"]], "convblock (class in src.matchbox.convblock)": [[3, "src.matchbox.ConvBlock.ConvBlock"]], "groupshuffle (class in src.matchbox.convblock)": [[3, "src.matchbox.ConvBlock.GroupShuffle"]], "maskedconv1d (class in src.matchbox.maskedconv1d)": [[3, "src.matchbox.MaskedConv1d.MaskedConv1d"]], "compute_new_kernel_size() (in module src.matchbox.convblock)": [[3, "src.matchbox.ConvBlock.compute_new_kernel_size"]], "forward() (src.matchbox.convasrdecoder.convasrdecoderclassification method)": [[3, "src.matchbox.ConvASRDecoder.ConvASRDecoderClassification.forward"]], "forward() (src.matchbox.convasrencoder.convasrencoder method)": [[3, "src.matchbox.ConvASREncoder.ConvASREncoder.forward"]], "forward() (src.matchbox.convblock.convblock method)": [[3, "src.matchbox.ConvBlock.ConvBlock.forward"]], "forward() (src.matchbox.convblock.groupshuffle method)": [[3, "src.matchbox.ConvBlock.GroupShuffle.forward"]], "forward() (src.matchbox.maskedconv1d.maskedconv1d method)": [[3, "src.matchbox.MaskedConv1d.MaskedConv1d.forward"]], "get_same_padding() (in module src.matchbox.convblock)": [[3, "src.matchbox.ConvBlock.get_same_padding"]], "get_seq_len() (src.matchbox.maskedconv1d.maskedconv1d method)": [[3, "src.matchbox.MaskedConv1d.MaskedConv1d.get_seq_len"]], "init_weights() (in module src.matchbox.convblock)": [[3, "src.matchbox.ConvBlock.init_weights"]], "src.matchbox": [[3, "module-src.matchbox"]], "src.matchbox.convasrdecoder": [[3, "module-src.matchbox.ConvASRDecoder"]], "src.matchbox.convasrencoder": [[3, "module-src.matchbox.ConvASREncoder"]], "src.matchbox.convblock": [[3, "module-src.matchbox.ConvBlock"]], "src.matchbox.maskedconv1d": [[3, "module-src.matchbox.MaskedConv1d"]], "tds_normal_() (in module src.matchbox.convblock)": [[3, "src.matchbox.ConvBlock.tds_normal_"]], "tds_uniform_() (in module src.matchbox.convblock)": [[3, "src.matchbox.ConvBlock.tds_uniform_"]], "update_masked_length() (src.matchbox.maskedconv1d.maskedconv1d method)": [[3, "src.matchbox.MaskedConv1d.MaskedConv1d.update_masked_length"]], "ekfac_plugin (class in src.plugins.ekfac_plugin)": [[4, "src.plugins.ekfac_plugin.EKFAC_Plugin"]], "kfac_plugin (class in src.plugins.ekfac_plugin)": [[4, "src.plugins.ekfac_plugin.KFAC_Plugin"]], "before_update() (src.plugins.ekfac_plugin.ekfac_plugin method)": [[4, "src.plugins.ekfac_plugin.EKFAC_Plugin.before_update"]], "before_update() (src.plugins.ekfac_plugin.kfac_plugin method)": [[4, "src.plugins.ekfac_plugin.KFAC_Plugin.before_update"]], "src.plugins": [[4, "module-src.plugins"]], "src.plugins.ekfac_plugin": [[4, "module-src.plugins.ekfac_plugin"]], "ekfac (class in src.plugins.natgrad.ekfac)": [[5, "src.plugins.natgrad.ekfac.EKFAC"]], "kfac (class in src.plugins.natgrad.kfac)": [[5, "src.plugins.natgrad.kfac.KFAC"]], "grad_wrt_kernel() (in module src.plugins.natgrad.ekfac)": [[5, "src.plugins.natgrad.ekfac.grad_wrt_kernel"]], "src.plugins.natgrad": [[5, "module-src.plugins.natgrad"]], "src.plugins.natgrad.ekfac": [[5, "module-src.plugins.natgrad.ekfac"]], "src.plugins.natgrad.kfac": [[5, "module-src.plugins.natgrad.kfac"]], "step() (src.plugins.natgrad.ekfac.ekfac method)": [[5, "src.plugins.natgrad.ekfac.EKFAC.step"]], "step() (src.plugins.natgrad.kfac.kfac method)": [[5, "src.plugins.natgrad.kfac.KFAC.step"]]}})