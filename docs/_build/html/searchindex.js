Search.setIndex({"docnames": ["dataset", "index", "infer", "main", "matchbox", "models", "modules", "overview", "plugins", "plugins.natgrad", "references", "templates", "transforms", "web", "webtools"], "filenames": ["dataset.rst", "index.rst", "infer.rst", "main.rst", "matchbox.rst", "models.rst", "modules.rst", "overview.rst", "plugins.rst", "plugins.natgrad.rst", "references.rst", "templates.rst", "transforms.rst", "web.rst", "webtools.rst"], "titles": ["dataset module", "Welcome to Sound-CL\u2019s documentation!", "infer module", "main module", "matchbox package", "models module", "src", "Overview", "plugins package", "plugins.natgrad package", "References", "templates package", "transforms module", "web", "Webtools"], "terms": {"class": [0, 3, 4, 5, 8, 9, 11, 12], "audio_dataset": [0, 6], "train_transform": 0, "none": [0, 4, 5, 9, 11], "test_transform": 0, "sourc": [0, 2, 3, 4, 5, 8, 9, 11, 12], "base": [0, 4, 5, 8, 9, 11, 12], "object": [0, 11], "avalanch": [0, 3, 6, 11], "audio": [0, 2, 4, 6, 12], "wrapper": [0, 6, 12], "mlcommon": 0, "root": 0, "sub_fold": 0, "subset2": 0, "subset": 0, "train": [0, 3, 6, 11], "transform": [0, 1, 5, 6], "function": [0, 2, 3, 4, 5, 11, 12], "lib": [0, 3], "paramet": [0, 2, 3, 4, 5, 12], "str": [0, 2, 3, 4], "option": [0, 2, 5, 12], "locat": 0, "default": [0, 2, 4, 5, 12], "one": [0, 4, 5, 9, 12], "valid": [0, 4], "test": [0, 6], "_type_": 0, "appli": 0, "data": [0, 3], "return": [0, 2, 3, 4, 11, 12], "": [0, 4, 11, 12], "classif": [0, 5], "type": [0, 2, 3, 4, 11, 12], "classificationdataset": 0, "speechcommand": 0, "posixpath": 0, "home": 0, "joe": 0, "url": 0, "speech_commands_v0": 0, "02": 0, "download": 0, "true": [0, 4, 9], "pre_process": 0, "output_shap": 0, "default_dataset_loc": 0, "version": 0, "name": 0, "bool": [0, 3, 4], "automat": 0, "present": 0, "torch": [0, 2, 4, 12], "nn": [0, 2, 4], "enabl": [0, 3], "prior": 0, "preprocess": [0, 4, 5], "save": [0, 3], "list": [0, 4], "output": [0, 4, 5, 11], "shape": [0, 4], "element": 0, "rais": 0, "valueerror": 0, "If": 0, "an": [0, 4, 6, 12], "unkown": 0, "i": [0, 1, 2, 3, 4, 5, 6], "chosen": 0, "cachedaudio": [0, 6], "train_cache_path": 0, "dataset_cach": 0, "test_cache_path": 0, "cach": 0, "hdf5": 0, "mlcommonsdata": [0, 6], "folder_in_arch": 0, "multilingu": 0, "spoken": 0, "word": 0, "get_metadata": 0, "n": [0, 4], "int": [0, 2, 3, 4, 5, 11, 12], "tupl": [0, 4], "speechcommandsdata": [0, 6], "torchaudio": 0, "preprocess_and_save_dataset": [0, 6], "save_path": 0, "thi": [0, 1, 3, 4, 5, 6, 12], "onli": [0, 4], "work": 0, "have": [0, 3], "those": 0, "specif": [0, 3], "entri": 0, "wave": 0, "label": [0, 2, 5], "rate": [0, 3], "speaker_id": 0, "utterance_numb": 0, "util": [0, 4, 6], "The": [0, 3, 4, 6], "process": [0, 4], "path": 0, "attributeerror": 0, "given": [0, 11], "empti": [0, 11], "speech_commands_col": [0, 6], "batch": [0, 3, 4, 5, 11], "collat": 0, "set": [0, 3, 4], "up": 0, "dataload": [0, 11], "size": [0, 3, 4, 5], "form": 0, "audio_tensor": [0, 12], "target": 0, "task_label": 0, "add": [1, 4, 12], "descript": 1, "head": [1, 4], "section": 1, "quick": 1, "overview": 1, "us": [1, 2, 3, 4, 6, 12], "librair": 1, "how": 1, "everyth": 1, "run": [1, 3, 4, 5, 6, 12], "src": 1, "main": [1, 4, 6], "modul": [1, 6], "dataset": [1, 6], "infer": [1, 6], "model": [1, 2, 3, 4, 6, 11], "matchbox": [1, 6], "packag": [1, 6], "plugin": [1, 3, 6, 11], "templat": [1, 6], "web": 1, "index": 1, "search": 1, "page": 1, "repositori": 1, "under": 1, "heavi": 1, "develop": 1, "predict": [2, 6], "devic": [2, 3, 11], "e": [2, 3, 5], "argmax": 2, "softmax": 2, "logit": 2, "pytorch": [2, 3, 6, 11, 12], "neural": 2, "network": [2, 4, 8], "tensor": [2, 4, 11, 12], "prefer": 2, "cpu": [2, 11], "record": [2, 6], "second": 2, "1": [2, 4, 5, 8, 9, 11, 12], "sample_r": [2, 12], "16000": [2, 12], "user": 2, "machin": 2, "microphon": 2, "yield": 2, "A": [2, 3, 6], "dimension": [2, 4, 12], "repres": [2, 4], "opt_typ": 3, "learning_r": 3, "train_batch_s": 3, "eval_batch_s": 3, "train_epoch": [3, 11], "momentum": 3, "w_decai": 3, "beta": 3, "save_model": 3, "_seed": 3, "_run": 3, "continu": [3, 6], "learn": [3, 6], "framework": 3, "creat": 3, "scenario": 3, "sacr": [3, 6], "store": 3, "experi": 3, "librari": [3, 6], "multipl": 3, "concept": 3, "strategi": [3, 8], "loop": [3, 11], "One": 3, "can": [3, 4, 12], "thu": 3, "special": [3, 4], "cycl": 3, "algorithm": 3, "particular": 3, "about": [3, 12], "stream": 3, "face": 3, "For": [3, 12], "exampl": [3, 12], "we": [3, 12], "increment": 3, "task": 3, "design": 3, "simpli": [3, 4], "augment": 3, "regular": 3, "custom": 3, "behavior": 3, "ad": [3, 4], "evalu": [3, 11], "replai": 3, "more": [3, 12], "detail": 3, "inform": [3, 12], "check": 3, "out": [3, 4], "websit": 3, "api": 3, "optim": [3, 8, 9, 11], "float": [3, 4, 12], "mini": [3, 11], "eval": 3, "number": [3, 4, 5], "epoch": [3, 11], "each": 3, "valu": [3, 4], "polynomialholddecayannealing_schedul": 3, "schedul": 3, "artifact": 3, "random": [3, 5, 12], "seed": 3, "gener": [3, 4, 5, 12], "common": 3, "all": [3, 4, 5, 6, 12], "capabl": 3, "runtim": 3, "environ": 3, "top1": 3, "averag": 3, "accuraci": 3, "convasrdecoderclassif": 4, "feat_in": 4, "num_class": [4, 5], "init_mod": 4, "xavier_uniform": 4, "return_logit": 4, "pooling_typ": 4, "avg": 4, "forward": [4, 5, 11, 12], "encoder_output": 4, "defin": [4, 5, 12], "comput": [4, 5, 11, 12], "perform": [4, 5, 9, 12], "everi": [4, 5, 12], "call": [4, 5, 8, 12], "should": [4, 5, 12], "overridden": [4, 5, 12], "subclass": [4, 5, 12], "although": [4, 5, 12], "recip": [4, 5, 12], "pass": [4, 5, 12], "need": [4, 5, 11, 12], "within": [4, 5, 12], "instanc": [4, 5, 12], "afterward": [4, 5, 12], "instead": [4, 5, 12], "sinc": [4, 5, 12], "former": [4, 5, 12], "take": [4, 5, 12], "care": [4, 5, 12], "regist": [4, 5, 12], "hook": [4, 5, 12], "while": [4, 5, 12], "latter": [4, 5, 12], "silent": [4, 5, 12], "ignor": [4, 5, 12], "them": [4, 5, 12], "activ": 4, "relu": 4, "64": [4, 12], "normalization_mod": 4, "residual_mod": 4, "norm_group": 4, "conv_mask": 4, "frame_spl": 4, "audio_sign": 4, "length": [4, 5], "inplan": 4, "plane": 4, "repeat": 4, "3": 4, "kernel_s": 4, "11": 4, "kernel_size_factor": 4, "stride": [4, 5, 9], "dilat": 4, "pad": [4, 9], "same": 4, "dropout": 4, "0": [4, 8, 9, 12], "2": 4, "residu": 4, "group": 4, "separ": 4, "fals": [4, 9, 12], "normal": 4, "residual_pan": 4, "stride_last": 4, "convolut": [4, 5], "block": [4, 12], "build": 4, "input": [4, 5, 12], "channel": [4, 5], "repe_at": 4, "sub": 4, "r": 4, "kernels": 4, "kernel": 4, "across": 4, "point": 4, "scale": 4, "multipli": 4, "round": 4, "down": 4, "nearest": 4, "odd": 4, "integ": 4, "compos": 4, "layer": [4, 5], "which": 4, "factor": 4, "note": 4, "when": 4, "must": 4, "equal": 4, "string": 4, "current": [4, 11], "support": 4, "symmetr": 4, "zero": [4, 12], "determin": 4, "percentag": 4, "ar": 4, "hardtanh": 4, "selu": 4, "swish": 4, "whether": 4, "branch": 4, "construct": 4, "pointwis": 4, "mai": 4, "depend": 4, "flag": 4, "describ": 4, "time": [4, 5, 12], "depthwis": 4, "ordinari": 4, "mask": [4, 12], "disabl": 4, "batchnorm1d": 4, "groupnorm1d": 4, "instancenorm": 4, "layernorm": 4, "case": 4, "groupnorm": 4, "argument": 4, "first": 4, "stride_add": 4, "requir": 4, "parallel": 4, "well": 4, "pane": 4, "jasper": 4, "dr": 4, "pleas": 4, "refer": 4, "paper": [4, 5], "In": 4, "onc": 4, "just": 4, "last": 4, "input_": 4, "two": 4, "signal": [4, 12], "b": 4, "d": 4, "t": 4, "vector": 4, "after": 4, "through": 4, "encod": [4, 5], "groupshuffl": 4, "x": [4, 5, 12], "compute_new_kernel_s": 4, "kernel_width": 4, "get_same_pad": 4, "init_weight": 4, "m": 4, "mode": 4, "tds_normal_": 4, "fan_in": 4, "initi": 4, "from": [4, 5], "sequenc": [4, 11], "speech": 4, "recognit": 4, "depth": 4, "either": [4, 5], "fan_out": 4, "choos": 4, "preserv": 4, "magnitud": 4, "varianc": 4, "weight": 4, "backward": 4, "tds_uniform_": 4, "uniform": 4, "in_channel": 4, "out_channel": 4, "bia": 4, "use_mask": 4, "len": 4, "get_seq_len": 4, "update_masked_length": 4, "audiova": [5, 6], "imgchannel": 5, "featuredim": 5, "15656": 5, "zdim": 5, "256": 5, "decod": 5, "z": 5, "batch_siz": 5, "condit": 5, "let": 5, "sampl": 5, "singl": 5, "provid": 5, "possibl": 5, "condot": 5, "g": [5, 9], "reparameter": 5, "mu": 5, "logvar": 5, "circular": [5, 6], "encdecbasemodel": [5, 6], "num_mel": 5, "final_filt": 5, "input_length": 5, "matchboxnet": [5, 6], "http": [5, 12], "arxiv": 5, "org": 5, "ab": 5, "2004": 5, "08531": 5, "mel": [5, 12], "featur": 5, "mfcc": 5, "final": 5, "conv": 5, "filter": 5, "dimens": 5, "input_sign": 5, "m5": [5, 6], "n_input": 5, "n_output": 5, "35": 5, "16": 5, "n_channel": 5, "32": 5, "basic": [5, 6], "pdf": 5, "1610": 5, "00087": 5, "pool": [5, 6], "channel_s": 5, "scattering_classifi": [5, 6], "folder": 6, "contain": 6, "script": 6, "organ": 6, "follow": [6, 12], "distinct": 6, "compon": 6, "show": [6, 12], "log": 6, "live": 6, "implement": 6, "collect": 6, "differ": 6, "person": 6, "addwhitenois": [6, 12], "mfcctransform": [6, 12], "scatter": [6, 12], "specaug": [6, 12], "submodul": 6, "convasrdecod": 6, "convasrencod": 6, "convblock": 6, "maskedconv1d": 6, "subpackag": 6, "natgrad": 8, "ekfac": 8, "grad_wrt_kernel": [8, 9], "kfac": 8, "content": 8, "ep": [8, 9], "basesgdplugin": 8, "before_upd": 8, "befor": 8, "updat": 8, "basetempl": 8, "kfac_plugin": 8, "net": 9, "sua": 9, "ra": 9, "update_freq": 9, "alpha": 9, "75": 9, "step": 9, "update_stat": 9, "update_param": 9, "precondit": 9, "target_s": 9, "pi": 9, "constraint_norm": 9, "rivertempl": 11, "deep_model": 11, "online_model": 11, "criterion": 11, "input_s": 11, "output_layer_nam": 11, "train_mb_siz": 11, "eval_mb_s": 11, "core": 11, "supervisedplugin": 11, "evaluationplugin": 11, "eval_everi": 11, "supervisedtempl": 11, "eval_epoch": 11, "kwarg": 11, "over": 11, "self": 11, "make_optim": 11, "onlin": 11, "do": 11, "tensor_to_dict": 11, "training_epoch": 11, "param": 11, "white": 12, "nois": 12, "x_with_nois": 12, "add_white_nois": 12, "min_snr_db": 12, "20": 12, "max_snr_db": 12, "90": 12, "std_n": 12, "5": 12, "gaussian": 12, "minimum": 12, "ratio": 12, "db": 12, "maximum": 12, "standard": 12, "deviat": 12, "distribut": 12, "frequenc": 12, "cepstral": 12, "coeffici": 12, "specgram": 12, "visual": 12, "ceptrum": 12, "matplotlib": 12, "fig": 12, "ax": 12, "plt": 12, "subplot": 12, "set_titl": 12, "titl": 12, "cepstrum": 12, "set_ylabel": 12, "ylabel": 12, "set_xlabel": 12, "frame": 12, "im": 12, "imshow": 12, "librosa": 12, "power_to_db": 12, "origin": 12, "lower": 12, "aspect": 12, "auto": 12, "colorbar": 12, "mfcc_transform": 12, "n_fft": 12, "512": 12, "n_mfcc": 12, "hop_length": 12, "10": 12, "mel_scal": 12, "htk": 12, "kymatio": 12, "checkout": 12, "www": 12, "kymat": 12, "io": 12, "doubl": 12, "modifi": 12, "spec_aug": 12, "time_mask": 12, "50": 12, "freq_mask": 12, "prob": 12, "8": 12}, "objects": {"": [[0, 0, 0, "-", "dataset"], [2, 0, 0, "-", "infer"], [3, 0, 0, "-", "main"], [4, 0, 0, "-", "matchbox"], [5, 0, 0, "-", "models"], [12, 0, 0, "-", "transforms"]], "dataset": [[0, 1, 1, "", "Audio_Dataset"], [0, 1, 1, "", "CachedAudio"], [0, 1, 1, "", "MLcommonsData"], [0, 1, 1, "", "SpeechCommandsData"], [0, 3, 1, "", "preprocess_and_save_dataset"], [0, 3, 1, "", "speech_commands_collate"]], "dataset.Audio_Dataset": [[0, 2, 1, "", "MLCommons"], [0, 2, 1, "", "SpeechCommands"]], "dataset.MLcommonsData": [[0, 2, 1, "", "get_metadata"]], "infer": [[2, 3, 1, "", "predict"], [2, 3, 1, "", "record"]], "main": [[3, 3, 1, "", "run"]], "matchbox": [[4, 0, 0, "-", "ConvASRDecoder"], [4, 0, 0, "-", "ConvASREncoder"], [4, 0, 0, "-", "ConvBlock"], [4, 0, 0, "-", "MaskedConv1d"]], "matchbox.ConvASRDecoder": [[4, 1, 1, "", "ConvASRDecoderClassification"]], "matchbox.ConvASRDecoder.ConvASRDecoderClassification": [[4, 2, 1, "", "forward"]], "matchbox.ConvASREncoder": [[4, 1, 1, "", "ConvASREncoder"]], "matchbox.ConvASREncoder.ConvASREncoder": [[4, 2, 1, "", "forward"]], "matchbox.ConvBlock": [[4, 1, 1, "", "ConvBlock"], [4, 1, 1, "", "GroupShuffle"], [4, 3, 1, "", "compute_new_kernel_size"], [4, 3, 1, "", "get_same_padding"], [4, 3, 1, "", "init_weights"], [4, 3, 1, "", "tds_normal_"], [4, 3, 1, "", "tds_uniform_"]], "matchbox.ConvBlock.ConvBlock": [[4, 2, 1, "", "forward"]], "matchbox.ConvBlock.GroupShuffle": [[4, 2, 1, "", "forward"]], "matchbox.MaskedConv1d": [[4, 1, 1, "", "MaskedConv1d"]], "matchbox.MaskedConv1d.MaskedConv1d": [[4, 2, 1, "", "forward"], [4, 2, 1, "", "get_seq_len"], [4, 2, 1, "", "update_masked_length"]], "models": [[5, 1, 1, "", "AudioVAE"], [5, 1, 1, "", "Circularize"], [5, 1, 1, "", "EncDecBaseModel"], [5, 1, 1, "", "M5"], [5, 1, 1, "", "Pool"], [5, 1, 1, "", "Scattering_Classifier"]], "models.AudioVAE": [[5, 2, 1, "", "decoder"], [5, 2, 1, "", "encoder"], [5, 2, 1, "", "forward"], [5, 2, 1, "", "generate"], [5, 2, 1, "", "reparameterize"]], "models.Circularize": [[5, 2, 1, "", "forward"]], "models.EncDecBaseModel": [[5, 2, 1, "", "forward"]], "models.M5": [[5, 2, 1, "", "forward"]], "models.Pool": [[5, 2, 1, "", "forward"]], "models.Scattering_Classifier": [[5, 2, 1, "", "forward"]], "plugins": [[8, 0, 0, "-", "ekfac_plugin"], [9, 0, 0, "-", "natgrad"]], "plugins.ekfac_plugin": [[8, 1, 1, "", "EKFAC_Plugin"], [8, 1, 1, "", "KFAC_Plugin"]], "plugins.ekfac_plugin.EKFAC_Plugin": [[8, 2, 1, "", "before_update"]], "plugins.ekfac_plugin.KFAC_Plugin": [[8, 2, 1, "", "before_update"]], "plugins.natgrad": [[9, 0, 0, "-", "ekfac"], [9, 0, 0, "-", "kfac"]], "plugins.natgrad.ekfac": [[9, 1, 1, "", "EKFAC"], [9, 3, 1, "", "grad_wrt_kernel"]], "plugins.natgrad.ekfac.EKFAC": [[9, 2, 1, "", "step"]], "plugins.natgrad.kfac": [[9, 1, 1, "", "KFAC"]], "plugins.natgrad.kfac.KFAC": [[9, 2, 1, "", "step"]], "templates": [[11, 0, 0, "-", "river"]], "templates.river": [[11, 1, 1, "", "RiverTemplate"]], "templates.river.RiverTemplate": [[11, 2, 1, "", "eval_epoch"], [11, 2, 1, "", "forward"], [11, 2, 1, "", "make_optimizer"], [11, 2, 1, "", "tensor_to_dict"], [11, 2, 1, "", "training_epoch"]], "transforms": [[12, 1, 1, "", "AddWhiteNoise"], [12, 1, 1, "", "MfccTransform"], [12, 1, 1, "", "Scattering"], [12, 1, 1, "", "SpecAugment"]], "transforms.AddWhiteNoise": [[12, 2, 1, "", "add_white_noise"], [12, 2, 1, "", "forward"]], "transforms.MfccTransform": [[12, 2, 1, "", "forward"], [12, 2, 1, "", "mfcc_transform"]], "transforms.Scattering": [[12, 2, 1, "", "forward"]], "transforms.SpecAugment": [[12, 2, 1, "", "forward"], [12, 2, 1, "", "spec_aug"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"dataset": 0, "modul": [0, 2, 3, 4, 5, 8, 9, 11, 12], "welcom": 1, "sound": 1, "cl": 1, "": 1, "document": 1, "get": 1, "start": 1, "content": [1, 6, 9], "indic": 1, "tabl": 1, "infer": 2, "main": 3, "matchbox": 4, "packag": [4, 8, 9, 11], "submodul": [4, 8, 9, 11], "convasrdecod": 4, "convasrencod": 4, "convblock": 4, "maskedconv1d": 4, "model": 5, "src": 6, "overview": 7, "plugin": [8, 9], "subpackag": 8, "ekfac_plugin": 8, "natgrad": 9, "ekfac": 9, "kfac": 9, "refer": 10, "templat": 11, "river": 11, "transform": 12, "web": 13, "webtool": 14}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx_last_updated_by_git": 1, "sphinx": 57}, "alltitles": {"dataset module": [[0, "module-dataset"]], "Welcome to Sound-CL\u2019s documentation!": [[1, "welcome-to-sound-cl-s-documentation"]], "Getting Started": [[1, "getting-started"]], "Contents:": [[1, null], [6, null]], "Indices and tables": [[1, "indices-and-tables"]], "infer module": [[2, "module-infer"]], "main module": [[3, "module-main"]], "matchbox package": [[4, "matchbox-package"]], "Submodules": [[4, "submodules"], [8, "submodules"], [9, "submodules"], [11, "submodules"]], "matchbox.ConvASRDecoder module": [[4, "module-matchbox.ConvASRDecoder"]], "matchbox.ConvASREncoder module": [[4, "module-matchbox.ConvASREncoder"]], "matchbox.ConvBlock module": [[4, "module-matchbox.ConvBlock"]], "matchbox.MaskedConv1d module": [[4, "module-matchbox.MaskedConv1d"]], "models module": [[5, "module-models"]], "src": [[6, "src"]], "Overview": [[7, "overview"]], "plugins package": [[8, "plugins-package"]], "Subpackages": [[8, "subpackages"]], "plugins.ekfac_plugin module": [[8, "module-plugins.ekfac_plugin"]], "plugins.natgrad package": [[9, "plugins-natgrad-package"]], "plugins.natgrad.ekfac module": [[9, "module-plugins.natgrad.ekfac"]], "plugins.natgrad.kfac module": [[9, "module-plugins.natgrad.kfac"]], "Module contents": [[9, "module-plugins.natgrad"]], "References": [[10, "references"]], "templates package": [[11, "templates-package"]], "templates.river module": [[11, "module-templates.river"]], "transforms module": [[12, "module-transforms"]], "web": [[13, "web"]], "Webtools": [[14, "webtools"]]}, "indexentries": {"audio_dataset (class in dataset)": [[0, "dataset.Audio_Dataset"]], "cachedaudio (class in dataset)": [[0, "dataset.CachedAudio"]], "mlcommons() (dataset.audio_dataset method)": [[0, "dataset.Audio_Dataset.MLCommons"]], "mlcommonsdata (class in dataset)": [[0, "dataset.MLcommonsData"]], "speechcommands() (dataset.audio_dataset method)": [[0, "dataset.Audio_Dataset.SpeechCommands"]], "speechcommandsdata (class in dataset)": [[0, "dataset.SpeechCommandsData"]], "dataset": [[0, "module-dataset"]], "get_metadata() (dataset.mlcommonsdata method)": [[0, "dataset.MLcommonsData.get_metadata"]], "module": [[0, "module-dataset"], [2, "module-infer"], [3, "module-main"], [4, "module-matchbox"], [4, "module-matchbox.ConvASRDecoder"], [4, "module-matchbox.ConvASREncoder"], [4, "module-matchbox.ConvBlock"], [4, "module-matchbox.MaskedConv1d"], [5, "module-models"], [8, "module-plugins.ekfac_plugin"], [9, "module-plugins.natgrad"], [9, "module-plugins.natgrad.ekfac"], [9, "module-plugins.natgrad.kfac"], [11, "module-templates.river"], [12, "module-transforms"]], "preprocess_and_save_dataset() (in module dataset)": [[0, "dataset.preprocess_and_save_dataset"]], "speech_commands_collate() (in module dataset)": [[0, "dataset.speech_commands_collate"]], "infer": [[2, "module-infer"]], "predict() (in module infer)": [[2, "infer.predict"]], "record() (in module infer)": [[2, "infer.record"]], "main": [[3, "module-main"]], "run() (in module main)": [[3, "main.run"]], "convasrdecoderclassification (class in matchbox.convasrdecoder)": [[4, "matchbox.ConvASRDecoder.ConvASRDecoderClassification"]], "convasrencoder (class in matchbox.convasrencoder)": [[4, "matchbox.ConvASREncoder.ConvASREncoder"]], "convblock (class in matchbox.convblock)": [[4, "matchbox.ConvBlock.ConvBlock"]], "groupshuffle (class in matchbox.convblock)": [[4, "matchbox.ConvBlock.GroupShuffle"]], "maskedconv1d (class in matchbox.maskedconv1d)": [[4, "matchbox.MaskedConv1d.MaskedConv1d"]], "compute_new_kernel_size() (in module matchbox.convblock)": [[4, "matchbox.ConvBlock.compute_new_kernel_size"]], "forward() (matchbox.convasrdecoder.convasrdecoderclassification method)": [[4, "matchbox.ConvASRDecoder.ConvASRDecoderClassification.forward"]], "forward() (matchbox.convasrencoder.convasrencoder method)": [[4, "matchbox.ConvASREncoder.ConvASREncoder.forward"]], "forward() (matchbox.convblock.convblock method)": [[4, "matchbox.ConvBlock.ConvBlock.forward"]], "forward() (matchbox.convblock.groupshuffle method)": [[4, "matchbox.ConvBlock.GroupShuffle.forward"]], "forward() (matchbox.maskedconv1d.maskedconv1d method)": [[4, "matchbox.MaskedConv1d.MaskedConv1d.forward"]], "get_same_padding() (in module matchbox.convblock)": [[4, "matchbox.ConvBlock.get_same_padding"]], "get_seq_len() (matchbox.maskedconv1d.maskedconv1d method)": [[4, "matchbox.MaskedConv1d.MaskedConv1d.get_seq_len"]], "init_weights() (in module matchbox.convblock)": [[4, "matchbox.ConvBlock.init_weights"]], "matchbox": [[4, "module-matchbox"]], "matchbox.convasrdecoder": [[4, "module-matchbox.ConvASRDecoder"]], "matchbox.convasrencoder": [[4, "module-matchbox.ConvASREncoder"]], "matchbox.convblock": [[4, "module-matchbox.ConvBlock"]], "matchbox.maskedconv1d": [[4, "module-matchbox.MaskedConv1d"]], "tds_normal_() (in module matchbox.convblock)": [[4, "matchbox.ConvBlock.tds_normal_"]], "tds_uniform_() (in module matchbox.convblock)": [[4, "matchbox.ConvBlock.tds_uniform_"]], "update_masked_length() (matchbox.maskedconv1d.maskedconv1d method)": [[4, "matchbox.MaskedConv1d.MaskedConv1d.update_masked_length"]], "audiovae (class in models)": [[5, "models.AudioVAE"]], "circularize (class in models)": [[5, "models.Circularize"]], "encdecbasemodel (class in models)": [[5, "models.EncDecBaseModel"]], "m5 (class in models)": [[5, "models.M5"]], "pool (class in models)": [[5, "models.Pool"]], "scattering_classifier (class in models)": [[5, "models.Scattering_Classifier"]], "decoder() (models.audiovae method)": [[5, "models.AudioVAE.decoder"]], "encoder() (models.audiovae method)": [[5, "models.AudioVAE.encoder"]], "forward() (models.audiovae method)": [[5, "models.AudioVAE.forward"]], "forward() (models.circularize method)": [[5, "models.Circularize.forward"]], "forward() (models.encdecbasemodel method)": [[5, "models.EncDecBaseModel.forward"]], "forward() (models.m5 method)": [[5, "models.M5.forward"]], "forward() (models.pool method)": [[5, "models.Pool.forward"]], "forward() (models.scattering_classifier method)": [[5, "models.Scattering_Classifier.forward"]], "generate() (models.audiovae method)": [[5, "models.AudioVAE.generate"]], "models": [[5, "module-models"]], "reparameterize() (models.audiovae method)": [[5, "models.AudioVAE.reparameterize"]], "ekfac_plugin (class in plugins.ekfac_plugin)": [[8, "plugins.ekfac_plugin.EKFAC_Plugin"]], "kfac_plugin (class in plugins.ekfac_plugin)": [[8, "plugins.ekfac_plugin.KFAC_Plugin"]], "before_update() (plugins.ekfac_plugin.ekfac_plugin method)": [[8, "plugins.ekfac_plugin.EKFAC_Plugin.before_update"]], "before_update() (plugins.ekfac_plugin.kfac_plugin method)": [[8, "plugins.ekfac_plugin.KFAC_Plugin.before_update"]], "plugins.ekfac_plugin": [[8, "module-plugins.ekfac_plugin"]], "ekfac (class in plugins.natgrad.ekfac)": [[9, "plugins.natgrad.ekfac.EKFAC"]], "kfac (class in plugins.natgrad.kfac)": [[9, "plugins.natgrad.kfac.KFAC"]], "grad_wrt_kernel() (in module plugins.natgrad.ekfac)": [[9, "plugins.natgrad.ekfac.grad_wrt_kernel"]], "plugins.natgrad": [[9, "module-plugins.natgrad"]], "plugins.natgrad.ekfac": [[9, "module-plugins.natgrad.ekfac"]], "plugins.natgrad.kfac": [[9, "module-plugins.natgrad.kfac"]], "step() (plugins.natgrad.ekfac.ekfac method)": [[9, "plugins.natgrad.ekfac.EKFAC.step"]], "step() (plugins.natgrad.kfac.kfac method)": [[9, "plugins.natgrad.kfac.KFAC.step"]], "rivertemplate (class in templates.river)": [[11, "templates.river.RiverTemplate"]], "eval_epoch() (templates.river.rivertemplate method)": [[11, "templates.river.RiverTemplate.eval_epoch"]], "forward() (templates.river.rivertemplate method)": [[11, "templates.river.RiverTemplate.forward"]], "make_optimizer() (templates.river.rivertemplate method)": [[11, "templates.river.RiverTemplate.make_optimizer"]], "templates.river": [[11, "module-templates.river"]], "tensor_to_dict() (templates.river.rivertemplate method)": [[11, "templates.river.RiverTemplate.tensor_to_dict"]], "training_epoch() (templates.river.rivertemplate method)": [[11, "templates.river.RiverTemplate.training_epoch"]], "addwhitenoise (class in transforms)": [[12, "transforms.AddWhiteNoise"]], "mfcctransform (class in transforms)": [[12, "transforms.MfccTransform"]], "scattering (class in transforms)": [[12, "transforms.Scattering"]], "specaugment (class in transforms)": [[12, "transforms.SpecAugment"]], "add_white_noise() (transforms.addwhitenoise method)": [[12, "transforms.AddWhiteNoise.add_white_noise"]], "forward() (transforms.addwhitenoise method)": [[12, "transforms.AddWhiteNoise.forward"]], "forward() (transforms.mfcctransform method)": [[12, "transforms.MfccTransform.forward"]], "forward() (transforms.scattering method)": [[12, "transforms.Scattering.forward"]], "forward() (transforms.specaugment method)": [[12, "transforms.SpecAugment.forward"]], "mfcc_transform() (transforms.mfcctransform method)": [[12, "transforms.MfccTransform.mfcc_transform"]], "spec_aug() (transforms.specaugment method)": [[12, "transforms.SpecAugment.spec_aug"]], "transforms": [[12, "module-transforms"]]}})